kind: pipeline
name: docker

platform:
  runner: 10.11.92.33

volumes:
  - name: go
    host:
      path: /data/cache/golang/pkg
  - name: yarn
    host:
      path: /data/cache/yarn/
  - name: ruby-cache
    host:
      path: /data/cache/ruby/cache
  - name: ruby-bundle
    host:
      path: /data/cache/ruby/bundle
  - name: docker
    host:
      path: /var/run/docker.sock

workspace:
  base: /go
  path: src/gitlab.com/gitlab-org/gitlab

steps:
  - name: gitlab-frontend
    image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-builder:v14.2.1-amd64
    volumes:
      - name: yarn
        path: /usr/local/share/.cache/yarn
      - name: ruby-cache
        path: /root/.cache
      - name: ruby-bundle
        path: /root/.bundle
    environment:
      RAILS_ENV: production
      NODE_ENV: production
    commands:
      - rm -rf .buildx node_modules vendor/bundle
      - cp -r /data/gitlab/node_modules /go/src/gitlab.com/gitlab-org/gitlab/node_modules
      - cp -r /data/gitlab/vendor/bundle /go/src/gitlab.com/gitlab-org/gitlab/vendor/bundle
      - bash .beagle/gitlab/patch.sh
      - bundle install -j"$(nproc)" --deployment --without development test mysql aws
      - yarn install --production --pure-lockfile
      - cp ./config/resque.yml.example ./config/resque.yml
      - cp ./config/gitlab.yml.example ./config/gitlab.yml
      - cp ./config/database.yml.postgresql ./config/database.yml
      - bundle exec rake gitlab:assets:compile USE_DB=false SKIP_STORAGE_VALIDATION=true NODE_OPTIONS="--max-old-space-size=4096"

  - name: gitlab-workhorse-golang
    image: registry.cn-qingdao.aliyuncs.com/wod/golang:1.16.7-buster
    volumes:
      - name: go
        path: /go/pkg
    environment:
      GOPROXY: https://goproxy.cn
      CURDIR: /go/src/gitlab.com/gitlab-org/gitlab
    commands:
      - mkdir -p .buildx/linux/amd64
      - export GOARCH=amd64
      - make -C workhorse install
      - cp workhorse/gitlab-* .buildx/linux/amd64/
      - mkdir -p .buildx/linux/arm64
      - export GOARCH=arm64
      - make -C workhorse install
      - cp workhorse/gitlab-* .buildx/linux/arm64/
      - mkdir -p .buildx/linux/ppc64le
      - export GOARCH=ppc64le
      - make -C workhorse install
      - cp workhorse/gitlab-* .buildx/linux/ppc64le/

  - name: gitlab-workhorse-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-ruby:2.7.2-amd64
      dockerfile: .beagle/gitlab-workhorse/dockerfile
      repo: wod/gitlab-workhorse
      version: 'v14.2.1'
      channel: 'amd64'
      args: 'TARGETOS=linux,TARGETARCH=amd64'
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: gitlab-workhorse-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-ruby:2.7.2-arm64
      dockerfile: .beagle/gitlab-workhorse/dockerfile
      repo: wod/gitlab-workhorse
      version: 'v14.2.1'
      channel: 'arm64'
      args: 'TARGETOS=linux,TARGETARCH=arm64'
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: gitlab-workhorse-ppc64le
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-ruby:2.7.2-ppc64le
      dockerfile: .beagle/gitlab-workhorse/dockerfile
      repo: wod/gitlab-workhorse
      version: 'v14.2.1'
      channel: 'ppc64le'
      args: 'TARGETOS=linux,TARGETARCH=ppc64le'
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: gitlab-base-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-runtime:v14.2.1-amd64
      dockerfile: .beagle/base/dockerfile
      repo: wod-arm/gitlab-base
      version: 'v14.2.1'
      channel: 'amd64'
      args: 'TARGETOS=linux,TARGETARCH=amd64'
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: gitlab-foss-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-builder:v14.2.1-amd64
    volumes:
      - name: yarn
        path: /usr/local/share/.cache/yarn
      - name: ruby-cache
        path: /root/.cache
      - name: ruby-bundle
        path: /root/.bundle
    environment:
      RAILS_ENV: production
      NODE_ENV: production
    commands:
      - rm -rf .buildx node_modules vendor/bundle
      - cp -r /data/gitlab/node_modules /go/src/gitlab.com/gitlab-org/gitlab/node_modules
      - cp -r /data/gitlab/vendor/bundle /go/src/gitlab.com/gitlab-org/gitlab/vendor/bundle
      - bash .beagle/gitlab/patch.sh
      - bundle install -j"$(nproc)" --deployment --without development test mysql aws
      - yarn install --production --pure-lockfile
      - cp ./config/resque.yml.example ./config/resque.yml
      - cp ./config/gitlab.yml.example ./config/gitlab.yml
      - cp ./config/database.yml.postgresql ./config/database.yml
      - bundle exec rake gitlab:assets:compile USE_DB=false SKIP_STORAGE_VALIDATION=true NODE_OPTIONS="--max-old-space-size=4096"

  - name: docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-base:v14.2.1-amd64
      dockerfile: .beagle/gitlab/dockerfile
      repo: wod/gitlab
      version: 'v14.2.1'
      channel: 'amd64'
      args: 'TARGETOS=linux,TARGETARCH=amd64'
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  # - name: gitlab-shell-arm64
  #   image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-shell:v13.19.1-arm64
  #   commands:
  #     - mkdir -p .buildx/gitlab-shell
  #     - cp -r /gitlab-org/gitlab-shell/* .buildx/gitlab-shell/ 

  # - name: gitlab-workhorse-arm64
  #   image: registry.cn-qingdao.aliyuncs.com/wod/golang:1.16.6-buster-arm64
  #   volumes:
  #     - name: go
  #       path: /go/pkg
  #   environment:
  #     GOPROXY: https://goproxy.cn
  #     CURDIR: /go/src/gitlab.com/gitlab-org/gitlab
  #   commands:
  #     - mkdir -p .buildx/gitlab-workhorse
  #     - make -C workhorse install
  #     - cp workhorse/gitlab-* .buildx/gitlab-workhorse/

  # - name: gitlab-pages-arm64
  #   image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-pages:v1.41.0-arm64
  #   commands:
  #     - mkdir -p .buildx/gitlab-pages
  #     - cp -a /usr/local/bin/gitlab-pages .buildx/gitlab-pages/gitlab-pages

  # - name: gitlab-gitaly-arm64
  #   image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-gitaly:v14.2.1-arm64
  #   commands:
  #     - mkdir -p .buildx/gitlab-gitaly
  #     - cp -r /gitlab-org/gitaly/* .buildx/gitlab-gitaly/

  # - name: gitlab-base-arm64
  #   image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
  #   volumes:
  #     - name: docker
  #       path: /var/run/docker.sock
  #   settings:
  #     base: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-runtime:v14.2.1-arm64
  #     dockerfile: .beagle/base/dockerfile
  #     repo: wod-arm/gitlab-base
  #     version: 'v14.2.1'
  #     channel: 'arm64'
  #     args: 'TARGETOS=linux,TARGETARCH=arm64'
  #     registry: registry.cn-qingdao.aliyuncs.com
  #     registry_user:
  #       from_secret: REGISTRY_USER_ALIYUN
  #     registry_password:
  #       from_secret: REGISTRY_PASSWORD_ALIYUN

  # - name: gitlab-foss-arm64
  #   image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-builder:v14.2.1-arm64
  #   volumes:
  #     - name: yarn
  #       path: /usr/local/share/.cache/yarn
  #     - name: ruby-cache
  #       path: /root/.cache
  #     - name: ruby-bundle
  #       path: /root/.bundle
  #   environment:
  #     RAILS_ENV: production
  #     NODE_ENV: production
  #   commands:
  #     - rm -rf .buildx node_modules vendor/bundle
  #     - cp -r /data/gitlab/vendor/bundle /go/src/gitlab.com/gitlab-org/gitlab/vendor/bundle

  # - name: docker-arm64
  #   image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
  #   volumes:
  #     - name: docker
  #       path: /var/run/docker.sock
  #   settings:
  #     base: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-base:v14.2.1-arm64
  #     dockerfile: .beagle/gitlab/dockerfile
  #     repo: wod/gitlab
  #     version: 'v14.2.1'
  #     channel: 'arm64'
  #     args: 'TARGETOS=linux,TARGETARCH=arm64'
  #     registry: registry.cn-qingdao.aliyuncs.com
  #     registry_user:
  #       from_secret: REGISTRY_USER_ALIYUN
  #     registry_password:
  #       from_secret: REGISTRY_PASSWORD_ALIYUN

  # - name: gitlab-shell-ppc64le
  #   image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-shell:v13.19.1-ppc64le
  #   commands:
  #     - mkdir -p .buildx/gitlab-shell
  #     - cp -r /gitlab-org/gitlab-shell/* .buildx/gitlab-shell/ 

  # - name: gitlab-workhorse-ppc64le
  #   image: registry.cn-qingdao.aliyuncs.com/wod/golang:1.16.6-buster-ppc64le
  #   volumes:
  #     - name: go
  #       path: /go/pkg
  #   environment:
  #     GOPROXY: https://goproxy.cn
  #     CURDIR: /go/src/gitlab.com/gitlab-org/gitlab
  #   commands:
  #     - mkdir -p .buildx/gitlab-workhorse
  #     - make -C workhorse install
  #     - cp workhorse/gitlab-* .buildx/gitlab-workhorse/

  # - name: gitlab-pages-ppc64le
  #   image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-pages:v1.41.0-ppc64le
  #   commands:
  #     - mkdir -p .buildx/gitlab-pages
  #     - cp -a /usr/local/bin/gitlab-pages .buildx/gitlab-pages/gitlab-pages

  # - name: gitlab-gitaly-ppc64le
  #   image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-gitaly:v14.2.1-ppc64le
  #   commands:
  #     - mkdir -p .buildx/gitlab-gitaly
  #     - cp -r /gitlab-org/gitaly/* .buildx/gitlab-gitaly/

  # - name: gitlab-base-ppc64le
  #   image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
  #   volumes:
  #     - name: docker
  #       path: /var/run/docker.sock
  #   settings:
  #     base: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-runtime:v14.2.1-ppc64le
  #     dockerfile: .beagle/base/dockerfile
  #     repo: wod-arm/gitlab-base
  #     version: 'v14.2.1'
  #     channel: 'ppc64le'
  #     args: 'TARGETOS=linux,TARGETARCH=ppc64le'
  #     registry: registry.cn-qingdao.aliyuncs.com
  #     registry_user:
  #       from_secret: REGISTRY_USER_ALIYUN
  #     registry_password:
  #       from_secret: REGISTRY_PASSWORD_ALIYUN

  # - name: gitlab-foss-ppc64le
  #   image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-builder:v14.2.1-ppc64le
  #   volumes:
  #     - name: yarn
  #       path: /usr/local/share/.cache/yarn
  #     - name: ruby-cache
  #       path: /root/.cache
  #     - name: ruby-bundle
  #       path: /root/.bundle
  #   environment:
  #     RAILS_ENV: production
  #     NODE_ENV: production
  #   commands:
  #     - rm -rf .buildx node_modules vendor/bundle
  #     - cp -r /data/gitlab/vendor/bundle /go/src/gitlab.com/gitlab-org/gitlab/vendor/bundle

  # - name: docker-ppc64le
  #   image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
  #   volumes:
  #     - name: docker
  #       path: /var/run/docker.sock
  #   settings:
  #     base: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-base:v14.2.1-ppc64le
  #     dockerfile: .beagle/gitlab/dockerfile
  #     repo: wod/gitlab
  #     version: 'v14.2.1'
  #     channel: 'ppc64le'
  #     args: 'TARGETOS=linux,TARGETARCH=ppc64le'
  #     registry: registry.cn-qingdao.aliyuncs.com
  #     registry_user:
  #       from_secret: REGISTRY_USER_ALIYUN
  #     registry_password:
  #       from_secret: REGISTRY_PASSWORD_ALIYUN

  # - name: docker-arch
  #   image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:v1.2.3
  #   volumes:
  #     - name: docker
  #       path: /var/run/docker.sock
  #   settings:
  #     platforms: linux/amd64,linux/arm64,linux/ppc64le
  #     template: registry.cn-qingdao.aliyuncs.com/wod/gitlab:v14.2.1-ARCH
  #     target: registry.cn-qingdao.aliyuncs.com/wod/gitlab:v14.2.1
  #     username:
  #       from_secret: REGISTRY_USER_ALIYUN
  #     password:
  #       from_secret: REGISTRY_PASSWORD_ALIYUN

---
kind: secret
name: REGISTRY_USER_ALIYUN
get:
  path: devops-registry-aliyun
  name: USERNAME

---
kind: secret
name: REGISTRY_PASSWORD_ALIYUN
get:
  path: devops-registry-aliyun
  name: PASSWORD
