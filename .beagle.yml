kind: pipeline
name: docker

platform:
  runner: 10.11.92.33

volumes:
  - name: go
    host:
      path: /data/cache/golang/pkg
  - name: yarn
    host:
      path: /data/cache/yarn/
  - name: ruby-cache
    host:
      path: /data/cache/ruby/cache
  - name: ruby-bundle
    host:
      path: /data/cache/ruby/bundle
  - name: docker
    host:
      path: /var/run/docker.sock

workspace:
  base: /go
  path: src/gitlab.com/gitlab-org/gitlab

steps:
  - name: gitlab-shell-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-shell:v13.19.1-amd64
    commands:
      - mkdir -p .buildx/gitlab-shell
      - cp -r /gitlab-org/gitlab-shell/* .buildx/gitlab-shell/ 

  - name: gitlab-workhorse-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/golang:1.16.6-alpine-amd64
    volumes:
      - name: go
        path: /go/pkg
    environment:
      GOPROXY: https://goproxy.cn
      CURDIR: /go/src/gitlab.com/gitlab-org/gitlab
    commands:
      - mkdir -p .buildx/gitlab-workhorse
      - make -C workhorse install
      - cp workhorse/gitlab-* .buildx/gitlab-workhorse/

  - name: gitlab-pages-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-pages:v1.41.0-amd64
    commands:
      - mkdir -p .buildx/gitlab-pages
      - cp -a /usr/local/bin/gitlab-pages .buildx/gitlab-pages/gitlab-pages

  - name: gitlab-gitaly-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-gitaly:v14.1.3-amd64
    commands:
      - mkdir -p .buildx/gitlab-gitaly
      - cp -r /gitlab-org/gitaly/* .buildx/gitlab-gitaly/

  - name: gitlab-base-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-runtime:v14.1.3-amd64
      dockerfile: .beagle/base/dockerfile
      repo: wod-arm/gitlab-base
      version: 'v14.1.3'
      channel: 'amd64'
      args: 'TARGETOS=linux,TARGETARCH=amd64'
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: gitlab-foss-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-builder:v14.1.3-amd64
    volumes:
      - name: yarn
        path: /usr/local/share/.cache/yarn
      - name: ruby-cache
        path: /root/.cache
      - name: ruby-bundle
        path: /root/.bundle
    environment:
      RAILS_ENV: production
      NODE_ENV: production
    commands:
      - rm -rf .buildx
      - bash .beagle/gitlab/patch.sh
      - bundle install -j"$(nproc)" 
      - yarn install --production --pure-lockfile
      - cp ./config/resque.yml.example ./config/resque.yml
      - cp ./config/gitlab.yml.example ./config/gitlab.yml
      - cp ./config/database.yml.postgresql ./config/database.yml
      - bundle exec rake gitlab:assets:compile USE_DB=false SKIP_STORAGE_VALIDATION=true NODE_OPTIONS="--max-old-space-size=4096"
      - rm -rf .dockerignore
      - cp .beagle/gitlab/.dockerignore .dockerignore

  - name: docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-base:v14.1.3-amd64
      dockerfile: .beagle/gitlab/dockerfile
      repo: wod/gitlab
      version: 'v14.1.3'
      channel: 'amd64'
      args: 'TARGETOS=linux,TARGETARCH=amd64'
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: gitlab-shell-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-shell:v13.19.1-arm64
    commands:
      - mkdir -p .buildx/gitlab-shell
      - cp -r /gitlab-org/gitlab-shell/* .buildx/gitlab-shell/ 

  - name: gitlab-workhorse-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/golang:1.16.6-alpine-arm64
    volumes:
      - name: go
        path: /go/pkg
    environment:
      GOPROXY: https://goproxy.cn
      CURDIR: /go/src/gitlab.com/gitlab-org/gitlab
    commands:
      - mkdir -p .buildx/gitlab-workhorse
      - make -C workhorse install
      - cp workhorse/gitlab-* .buildx/gitlab-workhorse/

  - name: gitlab-pages-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-pages:v1.41.0-arm64
    commands:
      - mkdir -p .buildx/gitlab-pages
      - cp -a /usr/local/bin/gitlab-pages .buildx/gitlab-pages/gitlab-pages

  - name: gitlab-gitaly-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-gitaly:v14.1.3-arm64
    commands:
      - mkdir -p .buildx/gitlab-gitaly
      - cp -r /gitlab-org/gitaly/* .buildx/gitlab-gitaly/

  - name: gitlab-base-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-runtime:v14.1.3-arm64
      dockerfile: .beagle/base/dockerfile
      repo: wod-arm/gitlab-base
      version: 'v14.1.3'
      channel: 'arm64'
      args: 'TARGETOS=linux,TARGETARCH=arm64'
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: gitlab-foss-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-builder:v14.1.3-arm64
    volumes:
      - name: yarn
        path: /usr/local/share/.cache/yarn
      - name: ruby-cache
        path: /root/.cache
      - name: ruby-bundle
        path: /root/.bundle
    environment:
      RAILS_ENV: production
      NODE_ENV: production
    commands:
      - rm -rf .buildx vendor/bundle
      - bash .beagle/gitlab/patch.sh
      - bundle install -j"$(nproc)" 
      - cp ./config/resque.yml.example ./config/resque.yml
      - cp ./config/gitlab.yml.example ./config/gitlab.yml
      - cp ./config/database.yml.postgresql ./config/database.yml
      - rm -rf .dockerignore
      - cp .beagle/gitlab/.dockerignore .dockerignore

  - name: docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-base:v14.1.3-arm64
      dockerfile: .beagle/gitlab/dockerfile
      repo: wod/gitlab
      version: 'v14.1.3'
      channel: 'arm64'
      args: 'TARGETOS=linux,TARGETARCH=arm64'
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: gitlab-shell-ppc64le
    image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-shell:v13.19.1-ppc64le
    commands:
      - mkdir -p .buildx/gitlab-shell
      - cp -r /gitlab-org/gitlab-shell/* .buildx/gitlab-shell/ 

  - name: gitlab-workhorse-ppc64le
    image: registry.cn-qingdao.aliyuncs.com/wod/golang:1.16.6-alpine-ppc64le
    volumes:
      - name: go
        path: /go/pkg
    environment:
      GOPROXY: https://goproxy.cn
      CURDIR: /go/src/gitlab.com/gitlab-org/gitlab
    commands:
      - mkdir -p .buildx/gitlab-workhorse
      - make -C workhorse install
      - cp workhorse/gitlab-* .buildx/gitlab-workhorse/

  - name: gitlab-pages-ppc64le
    image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-pages:v1.41.0-ppc64le
    commands:
      - mkdir -p .buildx/gitlab-pages
      - cp -a /usr/local/bin/gitlab-pages .buildx/gitlab-pages/gitlab-pages

  - name: gitlab-gitaly-ppc64le
    image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-gitaly:v14.1.3-ppc64le
    commands:
      - mkdir -p .buildx/gitlab-gitaly
      - cp -r /gitlab-org/gitaly/* .buildx/gitlab-gitaly/

  - name: gitlab-base-ppc64le
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-runtime:v14.1.3-ppc64le
      dockerfile: .beagle/base/dockerfile
      repo: wod-arm/gitlab-base
      version: 'v14.1.3'
      channel: 'ppc64le'
      args: 'TARGETOS=linux,TARGETARCH=ppc64le'
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: gitlab-foss-ppc64le
    image: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-builder:v14.1.3-ppc64le
    volumes:
      - name: yarn
        path: /usr/local/share/.cache/yarn
      - name: ruby-cache
        path: /root/.cache
      - name: ruby-bundle
        path: /root/.bundle
    environment:
      RAILS_ENV: production
      NODE_ENV: production
    commands:
      - rm -rf .buildx vendor/bundle
      - bash .beagle/gitlab/patch.sh
      - bundle install -j"$(nproc)" 
      - cp ./config/resque.yml.example ./config/resque.yml
      - cp ./config/gitlab.yml.example ./config/gitlab.yml
      - cp ./config/database.yml.postgresql ./config/database.yml
      - rm -rf .dockerignore
      - cp .beagle/gitlab/.dockerignore .dockerignore

  - name: docker-ppc64le
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod-arm/gitlab-base:v14.1.3-ppc64le
      dockerfile: .beagle/gitlab/dockerfile
      repo: wod/gitlab
      version: 'v14.1.3'
      channel: 'ppc64le'
      args: 'TARGETOS=linux,TARGETARCH=ppc64le'
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:v1.2.3
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      platforms: linux/amd64,linux/arm64,linux/ppc64le
      template: registry.cn-qingdao.aliyuncs.com/wod/gitlab:v14.1.3-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/gitlab:v14.1.3
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

---
kind: secret
name: REGISTRY_USER_ALIYUN
get:
  path: devops-registry-aliyun
  name: USERNAME

---
kind: secret
name: REGISTRY_PASSWORD_ALIYUN
get:
  path: devops-registry-aliyun
  name: PASSWORD
